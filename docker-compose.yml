version: '2.4'
services:

  nginx-proxy-manager:
    image: jlesage/nginx-proxy-manager
    volumes:
      - "/docker/appdata/nginx-proxy-manager:/config:rw"
    ports:
      - "8000:8181"
      - "80:8080" # first port is on localhost, second is on the docker container
      - "443:4443"

  webserver:
    build: webserver
    ports:
    - "8004:80" # first port is on localhost, second is on the docker container
    environment:
    - NGINX_HOST=foobar.com
    - NGINX_PORT=80

  octoprint:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 8005:80 # first port is on localhost, second is on the docker container
    # devices:
    # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
    #  - /dev/ttyACM0:/dev/ttyACM0
    #  - /dev/video0:/dev/video0
    volumes:
     - octoprint:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    #environment:
    #  - ENABLE_MJPG_STREAMER=true
  
  ####
  # uncomment if you wish to edit the configuration files of octoprint
  # refer to docs on configuration editing for more information
  ####

  #config-editor:
  #  image: linuxserver/code-server
  #  ports:
  #    - 8443:8443
  #  depends_on:
  #    - octoprint
  #  restart: unless-stopped
  #  environment:
  #    - PUID=0
  #    - PGID=0
  #    - TZ=America/Chicago
  #  volumes:
  #    - octoprint:/octoprint

volumes:
  octoprint: